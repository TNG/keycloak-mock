name: Java CI

on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  check_commit_hooks:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Run pre-commit check
        uses: pre-commit/action@v2.0.3

  build_java8:

    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
      - name: Build with Gradle
        run: ./gradlew build
      - name: Run integration tests
        run: ./gradlew e2e
      - name: Publish test report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          check_name: JUnit Test Report (Java 8)

  build_java17:

    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build with Gradle
        run: ./gradlew build
      - name: Run sonar analysis
        # As the secrets below are only correctly stored within our github account,
        # we need to disable the sonar run for forked repositories. Otherwise, remote
        # PRs would not be able to pass the CI check.
        if: ${{ github.repository == 'TNG/keycloak-mock' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_LOGIN }}
        run: ./gradlew sonar
      - name: Run integration tests
        run: ./gradlew e2e
      - name: Publish test report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          check_name: JUnit Test Report (Java 17)
      - name: Upload cypress output
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-reports-js
          path: |
            */cypress/screenshots/
            */cypress/videos/
          # e2e tests will not be run if unit tests fail, so it is ok if we find no artifacts
          if-no-files-found: ignore
