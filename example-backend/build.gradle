buildscript {
    ext {
        springBootVersion = '2.4.4'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'com.google.cloud.tools.jib'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'

// spring boot's bill of materials pulls in junit5 in an outdated version, so we need to update it
// see https://stackoverflow.com/questions/54598484/gradle-5-junit-bom-and-spring-boot-incorrect-versions
ext['junit-jupiter.version'] = junit5_version
// spring boot's bill of materials pulls in groovy v2, but rest assured needs groovy v3
ext['groovy.version'] = '3.0.7'

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"
    implementation "org.keycloak:keycloak-spring-boot-starter:$keycloak_version"
    testImplementation project(':mock-junit5')
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation "io.rest-assured:rest-assured:$restassured_version"
    testImplementation "io.rest-assured:json-path:$restassured_version"
    testImplementation "io.rest-assured:xml-path:$restassured_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    beforeTest { descriptor ->
        logger.lifecycle("Running test: ${descriptor}")
    }
}

jib {
    from {
        image = 'openjdk:11-jre-slim'
    }
    to {
        image = 'keycloak-mock/example-backend'
    }
    container {
        ports = ['8080']
    }
}

task prepareFrontend(type: Copy) {
    dependsOn ':example-frontend-react:yarn_build'
    from '../example-frontend-react/build/'
    into 'src/main/resources/static/'
}

processResources.dependsOn prepareFrontend
