buildscript {
    ext {
        springBootVersion = '3.4.4'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'com.google.cloud.tools.jib'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'

ext['junit-jupiter.version'] = junit5_version

dependencies {
    // Using multiple engines in a single project may lead to different JUnit
    // Platform artifact versions being pulled in via transitive dependencies.
    // Gradle allows you to enforce usage of fixed set of versions that match.
    // https://docs.gradle.org/current/userguide/platforms.html#sub:bom_import
    testImplementation(enforcedPlatform("org.junit:junit-bom:$junit5_version")) {
        because 'enforce matching Platform, Jupiter, and Vintage versions'
    }

    implementation "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-security:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server:$springBootVersion"
    implementation "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"
    // the enforcer has become decoupled from the keycloak release, see https://github.com/keycloak/keycloak/issues/30787
    implementation 'org.keycloak:keycloak-policy-enforcer:26.0.4'
    testImplementation project(':mock-junit')
    testImplementation project(':mock-junit5')
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation "io.rest-assured:rest-assured:$restassured_version"
    testImplementation "io.rest-assured:json-path:$restassured_version"
    testImplementation "io.rest-assured:xml-path:$restassured_version"
    testImplementation "junit:junit:$junit4_version"
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation "org.assertj:assertj-core:$assertj_version"
}

jib {
    from {
        image = 'eclipse-temurin:21-jre'
    }
    to {
        image = 'keycloak-mock/example-backend'
    }
    container {
        ports = ['8080']
    }
}

tasks.register('prepareFrontend', Copy) {
    dependsOn ':example-frontend-react:yarn_build'
    from '../example-frontend-react/build/'
    into 'src/main/resources/static/'
}

processResources.dependsOn prepareFrontend
