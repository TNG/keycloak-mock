description = 'Base module of keycloak-mock'

configurations {
    jsResourceJar {
        transitive = false
    }
    htmlResourceJar {
        transitive = false
    }
}

ext {
    dagger_version = '2.44.2'
}

dependencies {
    implementation "io.jsonwebtoken:jjwt-impl:$jjwt_version"
    implementation "io.jsonwebtoken:jjwt-jackson:$jjwt_version"
    implementation "io.vertx:vertx-web:$vertx_version"
    implementation "io.vertx:vertx-web-templ-freemarker:$vertx_version"
    implementation "org.slf4j:slf4j-api:$slf4j_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    jsResourceJar "org.keycloak:keycloak-js-adapter:$keycloak_version"
    htmlResourceJar "org.keycloak:keycloak-services:$keycloak_version"
    testImplementation 'io.fusionauth:fusionauth-jwt:5.2.1'
    testImplementation "io.rest-assured:rest-assured:$restassured_version"
    // required to mock RoutingContext
    testImplementation "io.vertx:vertx-codegen:$vertx_version"
    testImplementation 'net.javacrumbs.json-unit:json-unit-assertj:2.36.0'
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5_version"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockito_version"
    testImplementation 'org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:1.0.2'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    testRuntimeOnly "org.slf4j:slf4j-simple:$slf4j_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
}

tasks.register('addResources', Copy) {
    // make sure to fail if both JARs contain a NOTICE, then we need to merge the files somehow ...
    duplicatesStrategy = DuplicatesStrategy.FAIL
    from files(zipTree(configurations.jsResourceJar.singleFile)) {
        include 'keycloak.js'
        include 'META-INF/NOTICE'
    }
    from files(zipTree(configurations.htmlResourceJar.singleFile)) {
        include '/org/keycloak/protocol/oidc/endpoints/3p-cookies-step1.html'
        include '/org/keycloak/protocol/oidc/endpoints/3p-cookies-step2.html'
        include '/org/keycloak/protocol/oidc/endpoints/login-status-iframe.html'
        include 'META-INF/NOTICE'
    }
    into 'build/resources/main'
}

processResources.dependsOn addResources

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    beforeTest { descriptor ->
        logger.lifecycle("Running test: ${descriptor}")
    }
}
