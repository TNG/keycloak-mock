import static groovy.io.FileType.FILES

plugins {
    id 'com.github.node-gradle.node' version '3.5.1'
}

def nodeDir = 'bin/nodejs'
def yarnDir = 'bin/yarn'
def nodeVersionString = '16.15.0'
def yarnVersionString = '1.22.18'

node {
    // Version of node to use.
    version = nodeVersionString

    // Version of Yarn to use.
    yarnVersion = yarnVersionString

    // Base URL for fetching node distributions (change if you have a mirror).
    distBaseUrl = 'https://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file(nodeDir)

    // Set the work directory for Yarn
    yarnWorkDir = file(yarnDir)

    // Set the work directory where node_modules should be located
    nodeProjectDir = file("${project.projectDir}")
}

yarn_build {
    dependsOn yarn_install
    def files = []
    projectDir.traverse(type: FILES, nameFilter: ~/.*\.js(on){0,1}$/) {
        files << it
    }
    inputs.files(fileTree("$projectDir/src"), fileTree("$projectDir/public"), fileTree("$projectDir/tests"), files)
    outputs.dir("$projectDir/dist")
}

tasks.register('copyNode', Copy) {
    dependsOn nodeSetup
    if (org.gradle.internal.os.OperatingSystem.current().isLinux()) {
        from "${projectDir}/${nodeDir}/node-v${nodeVersionString}-linux-x64/"
        into "${projectDir}/${nodeDir}/node/"
    } else if (org.gradle.internal.os.OperatingSystem.current().isMacOsX()) {
        from "${projectDir}/${nodeDir}/node-v${nodeVersionString}-darwin-x64/"
        into "${projectDir}/${nodeDir}/node/"
    } else if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
        from "${projectDir}/${nodeDir}/node-v${nodeVersionString}-win-x64/"
        into "${projectDir}/${nodeDir}/node/"
    }
}

tasks.register('copyYarn', Copy) {
    dependsOn yarnSetup
    from file("${projectDir}/${yarnDir}/yarn-v${yarnVersionString}/")
    into file("${projectDir}/${yarnDir}/yarn/")
}

yarnSetup.dependsOn copyNode
yarn_install.dependsOn copyYarn

tasks.register('build') {
    dependsOn yarn_build
}

yarn_e2e {
    mustRunAfter ':example-integration-docker:composeUp'
}
